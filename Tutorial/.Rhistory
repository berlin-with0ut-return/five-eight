hist(prest$education, col = 'black', bor = 'white', main = '')
par(mfrow = c(1, 2))
hist(prest$prestige, col = 'black', bor = 'white', main = '')
hist(prest$education, col = 'black', bor = 'white', main = '')
# need to use scatterplot
# predicted ~ predictor
plot(prestige ~ education)
plot(prestige ~ education, data = prest)
par(mfrow = c(1, 1))
plot(prestige ~ education, data = prest)
mod <- lm(prestige ~ education, data = prest)
mod
abline(mo, col = 'red', lwd = 3)
# uses slope + intercept from lm
abline(mod, col = 'red', lwd = 3)
# uses slope + intercept from lm
abline(mod, col = 'red', lwd = 3. xlim = c(0, 20), ylim = c(-20, 100))
abline(mod, col = 'red', lwd = 3. xlim = c(0, 20), ylim = c(-20, 100))
abline(mod, col = 'red', lwd = 3)
plot(prestige ~ education, data = prest, xlim = c(0, 20), ylim = c(-20, 100))
plot(prestige ~ education, data = prest, xlim = c(0, 20), ylim = c(-20, 100))
abline(mod, col = 'red', lwd = 3)
plot(prestige ~ education, data = prest, xlim = c(0, 20), ylim = c(-20, 100))
plot(prestige ~ education, data = prest, xlim = c(0, 20), ylim = c(-20, 100))
abline(mod, col = 'red', lwd = 3)
# prestige = -10.7 + 5.3 * edu
-10.7 + 5.3 * 10
-10.7 + 5.3 * 10
head(mod$residuals) # model erros
head(mod$residuals^2) # model err sq
sum(mod$residuals^2) # sum residuals squared
sum(residual^2) - sum(mod$residuals^2)
(sum(residual^2) - sum(mod$residuals^2))/sum(residual^2)
inc_ed <- lm(income ~ education, data = prest)
inc_ed
-2853.6 + 898.8 * 10
-2853.6 + 898.8 * 100
prest[0]
prest[5]
prest[5,]
prest[50]
prest[50,]
-2853.6 + 898.8 * 9.84
inc_mean <- mean(prest$income, na.rm = T)
inc_SSmean <- sum((prest$income - inc_mean)^2)
inc_SSmean - sum(inc_ed$residuals^2))/inc_SSmean
inc_mean <- mean(prest$income, na.rm = T)
inc_SSmean <- sum((prest$income - inc_mean)^2)
inc_SSmean - sum(inc_ed$residuals^2)/inc_SSmean
(inc_SSmean - sum(inc_ed$residuals^2))/inc_SSmean
knitr::opts_chunk$set(echo = TRUE)
read.csv('Lab 4/class_dataset_SP20.csv')
class <- read.csv('Lab 4/class_dataset_SP20.csv')
head(class)
sleep_pos <- with(sleep, data.frame(sleep1, sleep2, sleep4, sleep5, sleep6, sleep7, sleep8))
sleep_pos <- with(class, data.frame(sleep1, sleep2, sleep4, sleep5, sleep6, sleep7, sleep8))
sleep_neg <- data.frame(class$sleep3R)
sleep_pos
hist(sleep_pos$sleep1)
hist(sleep_pos$sleep2)
hist(sleep_pos$sleep3)
hist(sleep_pos$sleep4)
sleep_rev <- 5 - sleep_neg
sleep <- cbind(sleep_pos, sleep_rev)
head(sleep)
sleep_rev <- 4 - sleep_neg
sleep <- cbind(sleep_pos, sleep_rev)
head(sleep)
alpha(sleep)
library(psych)
alpha(sleep)
class$avg_sleep <- rowMeans(sleep, na.rm = T)
hist(class$avg_sleep)
hist(class$avg_sleep, main = 'Sleep Scores', xlab = '', col = 'aquamarine', bor = 'white')
hist(class$avg_sleep, main = 'Sleep Scores', xlab = '', col = 'dodgerblue', bor = 'white')
describe(class$avg_sleep)
hist(class$avg_sleep, main = 'Sleep Deprivation Scores', xlab = '', col = 'dodgerblue', bor = 'white')
sleep_stress <- lm(sleep ~ pss1, data = class)
sleep_stress <- lm(avg_sleep ~ pss1, data = class)
plot(avg_sleep ~ pss1, data = class)
hist(class$pss1)
hist(class$pss2)
hist(class$pss2F)
hist(class$pss2R)
hist(class$pss3R)
head(stress)
stress_pos <- with(class, data.frame(pss1, pss4))
stress_neg <- with(class, data.frame(pss2R, pss3R))
stress_rev <- 4 - stress_neg
stress <- cbind(stress_pos, stress_rev)
head(stress)
stress
knitr::opts_chunk$set(echo = TRUE)
stress_pos <- with(class, data.frame(pss1, pss4))
stress_pos <- with(class, data.frame(pss1, pss4))
stress_pos <- with(class, data.frame(pss1, pss4))
class <- read.csv('Lab 4/class_dataset_SP20.csv')
head(class)
sleep_pos <- with(class, data.frame(sleep1, sleep2, sleep4, sleep5, sleep6, sleep7, sleep8))
sleep_neg <- data.frame(class$sleep3R)
sleep_rev <- 4 - sleep_neg
sleep <- cbind(sleep_pos, sleep_rev)
head(sleep)
# 0.73: scale is relatively reliable
library(psych)
alpha(sleep)
class$avg_sleep <- rowMeans(sleep, na.rm = T)
hist(class$avg_sleep, main = 'Sleep Deprivation Scores', xlab = '', col = 'dodgerblue', bor = 'white')
stress_pos <- with(class, data.frame(pss1, pss4))
stress_neg <- with(class, data.frame(pss2R, pss3R))
stress_rev <- 4 - stress_neg
stress <- cbind(stress_pos, stress_rev)
class$avg_stress <- rowMeans(stress, na.rm = T)
sleep_stress <- lm(avg_sleep ~ avg_stress, data = class)
plot(avg_sleep ~ avg_stress, data = class)
plot(avg_sleep ~ avg_stress, data = class)
abline(sleep_stress, col = 'red', lwd = 3)
sleep_stress
mean_resid
mean_resid <- sum((avg_sleep - mean(avg_sleep, na.rm = T))^2, na.rm = T)
mean_resid <- sum((class$avg_sleep - mean(class$avg_sleep, na.rm = T))^2, na.rm = T)
mean_resid
mean_resid <- sum((class$avg_sleep - mean(class$avg_sleep, na.rm = T))^2, na.rm = T)
mod_resid <- sum(sleep_stress$residuals^2)
(mean_resid - mod_resid)/mod_resid
cor(class$avg_sleep, class$avg_stress)
sqrt(cor(class$avg_sleep, class$avg_stress))
mean_resid <- sum((class$avg_sleep - mean(class$avg_sleep, na.rm = T))^2, na.rm = T)
mod_resid <- sum(sleep_stress$residuals^2)
(mod_resid - mean_resid)/mean_resid
mean_resid<- sum((class$avg_sleep - mean(class$avg_sleep, na.rm = T))^2, na.rm = T)
mod_resid <- sum(sleep_stress$residuals^2)
(mean_resid - mod_resid)/mean_resid
0.39^2
mascot
alpha(SES)
SES <- cbind(mascot$Income, mascot$MotherEducation, mascot$FatherEducation)
alpha(SES)
mascot <- read.csv('Lab 4/mascot_data.csv')
# SES scale
inc_ed <- cbind(mascot$Income, mascot$MotherEducation, mascot$FatherEducation)
# reliability
alpha(inc_ed)
# SES variable
SES <- RowMeans(inc_ed)
mascot <- read.csv('Lab 4/mascot_data.csv')
# SES scale
inc_ed <- cbind(mascot$Income, mascot$MotherEducation, mascot$FatherEducation)
# reliability
alpha(inc_ed)
# SES variable
SES <- rowMeans(inc_ed)
hist(SES)
hist(SES)
describe(SES)
hist(SES)
```{r}
describe(SES)
alpha(SES)
alpha(inc_ed)
mascot$SES <- SES
att_SES <- lm(attitude ~ SES, data = mascot)
plot(attitude ~ SES, data = mascot)
abline(att_SES, lwd = 3, col = 'red')
att_SES
att_SES
mean_resid <- sum((mascot$attitude - mean(mascot$attitude, na.rm = T))^2, na.rm = T)
mod_resid <- sum(att_SES$residuals^2)
(mean_resid - mod_resid)/mean_resid
viagraData<-read.delim("ViagraCovariate.dat", header = TRUE)
# directly creating data
libido<-c(3,2,5,2,2,2,7,2,4,7,5,3,4,4,7,5,4,9,2,6,3,4,4,4,6,4,6,2,8,5)
partnerLibido < - c ( 4 , 1 , 5 , 1 , 2 , 2 , 7 , 4 , 5 , 5 , 3 , 1 , 2 , 2 , 6 , 4 , 2 , 1 , 3 , 5 , 4,3,3,2,0,1,3,0,1,0)
dose<-c(rep(1,9),rep(2,8), rep(3,13)) # repeats number to represent groups
# signifying + labeling levels
dose<-factor(dose, levels = c(1:3), labels = c("Placebo", "Low Dose", "High Dose"))
# merge variables into dataframe
viagraData<-data.frame(dose, libido, partnerLibido)
viagraData<-read.delim("ViagraCovariate.dat", header = TRUE)
viagraData<-read.delim("ViagraCovariate.dat", header = TRUE)
viagraData<-read.delim("C:\Users/sherr/School/Sp20/Psych101/Reading 101/ViagraCovariate.dat", header = TRUE)
viagraData<-read.delim("C:/Users/sherr/School/Sp20/Psych101/Reading 101/ViagraCovariate.dat", header = TRUE)
viagraData<-read.delim("C:/Users/sherr/School/Sp20/Psych101/Reading 101/ViagraCovariate.dat", header = TRUE)
# directly creating data
libido<-c(3,2,5,2,2,2,7,2,4,7,5,3,4,4,7,5,4,9,2,6,3,4,4,4,6,4,6,2,8,5)
partnerLibido < - c ( 4 , 1 , 5 , 1 , 2 , 2 , 7 , 4 , 5 , 5 , 3 , 1 , 2 , 2 , 6 , 4 , 2 , 1 , 3 , 5 , 4,3,3,2,0,1,3,0,1,0)
dose<-c(rep(1,9),rep(2,8), rep(3,13)) # repeats number to represent groups
# signifying + labeling levels
dose<-factor(dose, levels = c(1:3), labels = c("Placebo", "Low Dose", "High Dose"))
# merge variables into dataframe
viagraData<-data.frame(dose, libido, partnerLibido)
partnerLibido < - c ( 4 , 1 , 5 , 1 , 2 , 2 , 7 , 4 , 5 , 5 , 3 , 1 , 2 , 2 , 6 , 4 , 2 , 1 , 3 , 5 , 4,3,3,2,0,1,3,0,1,0)
viagraData<-read.delim("C:/Users/sherr/School/Sp20/Psych101/Reading 101/ViagraCovariate.dat", header = TRUE)
# directly creating data
libido<-c(3,2,5,2,2,2,7,2,4,7,5,3,4,4,7,5,4,9,2,6,3,4,4,4,6,4,6,2,8,5)
partnerLibido <- c ( 4 , 1 , 5 , 1 , 2 , 2 , 7 , 4 , 5 , 5 , 3 , 1 , 2 , 2 , 6 , 4 , 2 , 1 , 3 , 5 , 4,3,3,2,0,1,3,0,1,0)
dose<-c(rep(1,9),rep(2,8), rep(3,13)) # repeats number to represent groups
# signifying + labeling levels
dose<-factor(dose, levels = c(1:3), labels = c("Placebo", "Low Dose", "High Dose"))
# merge variables into dataframe
viagraData<-data.frame(dose, libido, partnerLibido)
# descriptive statistics
by(viagraData$libido, viagraData$dose, stat.desc)
by(viagraData$partnerLibido, viagraData$dose, stat.desc)
install.packages("car"); install.packages("compute.es"); install.packages
("effects"); install.packages("ggplot2"); install.packages("multcomp"); install.
packages("pastecs"); install.packages("WRS", repos="http://R-Forge.R-project.
org")
install.packages("effects")
install.packages("effects")
install.packages("car")
install.packages("compute.es")
install.packages("effects")
install.packages("ggplot2")
install.packages("multcomp")
install.packages("pastecs")
install.packages("WRS", repos="http://R-Forge.R-project.org")
by(viagraData$libido, viagraData$dose, stat.desc)
by(viagraData$partnerLibido, viagraData$dose, stat.desc)
by(viagraData$libido, viagraData$dose, stat.desc)
by(viagraData$libido, viagraData$dose, stat.desc)
by(viagraData$partnerLibido, viagraData$dose, stat.desc)
by(viagraData$libido, viagraData$dose, stat.desc)
by(viagraData$partnerLibido, viagraData$dose, summary)
by(viagraData$libido, viagraData$dose, summary)
by(viagraData$partnerLibido, viagraData$dose, summary)
library(car)
library(compute.es)
library(effects)
library(ggplot2)
library(multcomp)
library(pastecs)
library(WRS)
library(WRS2)
by(viagraData$libido, viagraData$dose, stat.desc)
by(viagraData$partnerLibido, viagraData$dose, stat.desc)
leveneTest(viagraData$libido, viagraData$dose, center = median)
# nonsignificant F
leveneTest(viagraData$libido, viagraData$dose, center = median)
viagraModel<-aov(libido ~ dose, data = viagraData)
# add new predictor
viagraModel<-aov(libido ~ dose + partnerLibido, data = viagraData)
# order matters!
# nonsignifcant effect of covariate, significant effect of dose
covariateFirst<-aov(libido ~ partnerLibido + dose, data = viagraData)
summary(covariateFirst)
covariateFirst<-aov(libido ~ partnerLibido + dose, data = viagraData)
summary(covariateFirst)
doseFirst<-aov(libido ~ dose + partnerLibido, data = viagraData) summary(doseFirst)
doseFirst<-aov(libido ~ dose + partnerLibido, data = viagraData)
summary(doseFirst)
Anova(doseFirst, type = "III")
Anova(covariateFirst, type = "III")
viagraModel<-aov(libido ~ partnerLibido + dose, data = viagraData)
# set contrast codes: orthagonal
contrasts(viagraData$dose)<-contr.helmert(3)
contrasts(viagraData$dose)<-cbind(c(-2,1,1), c(0,-1,1))
# Type III ANCOVA
contrasts(viagraData$dose)<-cbind(c(-2,1,1), c(0,-1,1))
viagraModel<-aov(libido ~ partnerLibido + dose, data = viagraData)
# significant effect of tmt after covariate removal
Anova(viagraModel, type="III")
adjustedMeans<-effect("dose", viagraModel, se=TRUE)
summary(adjustedMeans)
adjustedMeans$se
postHocs<-glht(viagraModel, linfct = mcp(dose = "Tukey"))
summary(postHocs)
confint(postHocs)
# residuals vs. fitted: homogeneity of variance
# Q-Q plot: normality of residuals (should be on line)
plots(viagraModel)
install.packages("WRS", repos="http://R-Forge.R-project.org")
library(WRS2)
library(WRS)
plot(viagraModel)
# colon indivates interaction
hoRS<-aov(libido ~ partnerLibido + dose + dose:partnerLibido, data = viagraData)
# considers individual effects + interaction
hoRS<-aov(libido ~ partnerLibido*dose, data = viagraData)
# update original ANCOVA with interaction term
# .~. = keep original outcome/predictor, add interaction term
hoRS<-update(viagraModel, .~. + partnerLibido:dose)
# significant interaction: assumptions of ANCOVA not met
Anova(hoRS, type="III")
library(car) # make sure you have this package installed first
presto <- Prestige
## Q1. How many individuals are in this dataset
nrow(presto)
## Q2. How many variables are in this dataset?
length(presto)
## Q3. What is the name of the fifth variable in the dataset?
names(presto)
## Q4. What is the value of the 42nd row and 5th variable?
presto[42, 5]
## Q5. What is the value of the 42nd row and 13th variable?
presto[42, 13]
## Q6. What is the average (mean) of the variable 'education'?
mean(presto$education, na.rm = T)
## Q7. What is the average (mean) of the variable income?
mean(presto$income, na.rm = T)
## Q8. How would you describe the shape of the distribution of the variable income?
hist(presto$income)
resid <- presto$income - inc_mean
resid_sq <- resid^2
sum(resid_sq)
resid <- presto$income - inc_mean
inc_mean <- mean(presto$income, na.rm = T)
resid <- presto$income - inc_mean
resid_sq <- resid^2
sum(resid_sq)
prestige2[prestige2$income > 20000 & !is.na(prestige2$income), ]$income
prestige2 <- presto
prestige2[prestige2$income > 20000 & !is.na(prestige2$income), ]$income
prestige2[prestige2$income > 20000 & !is.na(prestige2$income), ]$income <- NA
## Q11. What is the mean of the variable 'income' when you remove this individual?
mean(prestige2$income)
## Q11. What is the mean of the variable 'income' when you remove this individual?
mean(prestige2$income, na.rm = T)
mean(INC, na.rm = T)
library(psy)
library(psych)
describe(class)
install.packages('DSUR')
install.packages('DSUR.noof')
install.packages("devtools")
library(devtools)
install_github("Frostarella/DSUR.noof")
t<-c(2.227, 2.785, 0.541)
df<-26
# DSUR package
rcontrast(t, df) # medium, med, small respectively
library(DSUR.noof)
t<-c(2.227, 2.785, 0.541)
df<-26
# DSUR package
rcontrast(t, df) # medium, med, small respectively
library(calculate.es)
install.packages(calculate.es)
install.packages("calculate.es")
library(compute.es)
mes(5.988117, 4.151886, 1.755879, 1.788613, 8, 9)
knitr::opts_chunk$set(echo = TRUE)
setwd('/Users/sherr/School/Sp20/Psych101/101 Lab/Lab 6/')
anchor <- read.csv('anchoring_SP20.csv')
plot(anchor$cond)
plot(anchor$meat)
plot(anchor$tree)
anchor$meat[anchor$meat < 800000]
anchor$meat[anchor$meat > 800000] <- NA
anchor$meat[anchor$meat > 800000] <- NA
plot(anchor$meat)
anchor[anchor$meat > 800000]$meat <- NA
plot(anchor$cat)
anchor <- ifelse(anchor$meat > 800000, NA, anchor$cat)
plot(anchor$cat)
anchor <- ifelse(anchor$meat > 800000, NA, anchor$meat)
anchor$meat[anchor$meat > 800000]
setwd('/Users/sherr/School/Sp20/Psych101/101 Lab/Lab 6/')
anchor <- read.csv('anchoring_SP20.csv')
anchor$meat[anchor$meat > 800000]
anchor$meat[anchor$meat > 800000] <- NA
plot(anchor$meat)
anchor$meat[anchor$meat > 10000] <- NA
anchor$meat[anchor$meat > 10000] <- NA
plot(anchor$meat)
plotmeans(meat ~ cond, anchor)
library(gplots)
plotmeans(meat ~ cond, anchor)
library(gplots)
plotmeans(meat ~ cond, anchor)
plotmeans(tree ~ cond, anchor)
tree_mod <- lm(tree ~ cond, anchor)
meat_mod <- lm(meat ~ cond, anchor)
tree_mod$coefficients
meat_mod$coefficients
662.7816 + -464.2002 * 1
# prediction for tree, high
662.7816 + -464.2002 * 0
# prediction for meat, low
1030.9059 + -879.8367 * 1
# prediction for tree, high
1030.9059 + -879.8367 * 0
summary(meat_mod)$R_squared
summary(meat_mod)$r_squared
summary(meat_mod)$r.squared
summary(tree_mod)$r.squared
chick <- read.csv('chicken_weights.csv')
names(chick)
chick$feed
plot(chick$feed)
plot(chick$X)
plot(chick$feed)
plot(chick$weight)
chick_mod <- lm(weight ~ feed, chick)
plotmeans(weight ~ feed, chick)
summary(chick_mod)$r.squared
plot(chicken$feedR)
chicken$feedR <- relevel(chicken$feed, ref = "meatmeal")
chick$feedR <- relevel(chick$feed, ref = "meatmeal")
plot(chick$feedR)
plotmeans(weight ~ feedR, chick)
class <- read.csv('class_dataset_SP20.csv')
levels(class$postcollege)
levels(class$diet)
max(class$o3r)
min(class$o3r)
open <- with(student, data.frame(o1, o2, 6 - o3r))
class <- read.csv('class_dataset_SP20.csv')
levels(class$diet)
levels(class$diet)[1] <- NA
max(class$o3r)
min(class$o3r)
open <- with(class$diet, data.frame(o1, o2, 6 - o3r))
class <- read.csv('class_dataset_SP20.csv')
levels(class$diet)
levels(class$diet)[1] <- NA
max(class$o3r)
min(class$o3r)
open <- with(class, data.frame(o1, o2, 6 - o3r))
class$openness <- rowMeans(open)
class$openness
plot(class$openness)
plot(class$diet)
diet_open <- lm(openness ~ diet, class)
coef(diet_open)
plotmeans(openness ~ diet, class)
summary(diet_open)$r.squared
mod4 <- lm(prestige ~ education * type, presto)
library(car)
library(arm)
library(rgl)
presto <- Prestige
mod <- lm(prestige ~ income, presto)
coef(mod)
mod2 <- lm(prestige ~ education, data = presto)
mod3 <- lm(prestige ~ education + income, presto)
coef(mod)
# education changes less, so more important
standardize(mod, NULL, T) # bivariate rlsp btwn inc/prestige
standardize(mod3, NULL, T) # multivariate rlsp btwn education/prestige, controlling for income
standardize(mod2, NULL, T) # bivariate rlsp btwn ed/prestige
# R2: inc + educ explains 80% of variation
summary(mod3)
# educ explains 72% of variation
summary(mod2)
# income explains 50% of variation
summary(mod)
# adjusted R2: penalty for adding new varialbles
# overfitting: high R2
# if large multiple/adjusted R2 diff
scatter3d(prestige ~ education + income, presto)
mod4 <- lm(prestige ~ education * type, presto)
standardize(mod4, NULL, T)
cf <- coef(mod4)
plot(scale(prestige) ~ scale(education), presto, col = presto$type, pch = 19)
standardize(mod4, NULL, T)
abline(a = cf[1], b = cf[2], lwd = 5, col = 'black') # bc slope/int
cf <- coef(standardize(mod4, NULL, T))
cf <- coef(standardize(mod4, NULL, T))
plot(scale(prestige) ~ scale(education), presto, col = presto$type, pch = 19)
abline(a = cf[1], b = cf[2], lwd = 5, col = 'black') # bc slope/int
abline(a = cf[1] + cf[3], b = cf[2] + cf[5], lwd = 5, col = 'red')
abline(a = cf[1] + cf[4], b = cf[2] + cf[6], lwd = 5, col = 'red')
abline(a = cf[1] + cf[4], b = cf[2] + cf[6], lwd = 5, col = 'green')
plot(scale(prestige) ~ scale(education), presto, col = presto$type, pch = 19)
abline(a = cf[1], b = cf[2], lwd = 3, col = 'black') # bc slope/int
abline(a = cf[1] + cf[3], b = cf[2] + cf[5], lwd = 3, col = 'red')
abline(a = cf[1] + cf[4], b = cf[2] + cf[6], lwd = 3, col = 'green')
summary(mod4)
summary(standardize(mod4, NULL, T))
summary(standardize(mod4, NULL, T))
install.packages("shiny")
library(shiny)
shiny::runApp('C:/Users/sherr/School/five-eight/Tutorial')
runApp('C:/Users/sherr/School/five-eight/Tutorial')
runApp('C:/Users/sherr/School/five-eight/Tutorial')
runApp('C:/Users/sherr/School/five-eight/Tutorial')
runApp('C:/Users/sherr/School/five-eight/Tutorial')
runApp('C:/Users/sherr/School/five-eight/Tutorial')
runApp('C:/Users/sherr/School/five-eight/Tutorial')
runApp('C:/Users/sherr/School/five-eight/Tutorial')
runApp('C:/Users/sherr/School/five-eight/Tutorial')
runApp('C:/Users/sherr/School/five-eight/Tutorial')
runApp('C:/Users/sherr/School/five-eight/Tutorial')
shiny::runApp('C:/Users/sherr/School/five-eight/Tutorial/Census/Census')
runApp('C:/Users/sherr/School/five-eight/Tutorial/Census/Census')
install.packages("quantmod")
runApp("stockVis")
library(shiny)
setwd(dir = '/Users/sherr/School/five-eight/Tutorial/')
runApp("stockVis")
runApp("stockVis", "showcase")
runApp("stockVis")
runApp('stockVis')
runApp('stockVis')
runApp('stockVis')
runApp('C:/Users/sherr/School/five-eight/WebApp')
runApp('C:/Users/sherr/School/five-eight/WebApp')
runApp('C:/Users/sherr/School/five-eight/WebApp')
runApp('C:/Users/sherr/School/five-eight/WebApp')
runApp('C:/Users/sherr/School/five-eight/WebApp')
runApp('C:/Users/sherr/School/five-eight/WebApp')
runApp('C:/Users/sherr/School/five-eight/WebApp')
install.packages("readxl")
library(shiny)
library(readxl)
library(shiny)
library(readxl)
scores <- read_excel("/Users/sherr/School/five-eight/scores.xlsx")
head(data)
scores <- read_excel("/Users/sherr/School/five-eight/scores.xlsx")
head(scores)
